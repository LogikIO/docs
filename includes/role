<h1 id="roles">Roles</h1>

<p>Stamplay supports role based access control for a fine grained authorization layer if needed.</p>

<p>Roles provide a logical way of grouping users with common access privileges to your data and how a user is able to perform CRUD operations on a resource.</p>

<p>Roles can be created and deleted only inside Stamplay but you can assign them to your users via APIs.</p>

<h2 id="how-roles-work">How Roles Work</h2>

<p>To Do</p>

<h2 id="fetch-all-roles">Fetch All Roles</h2>

<p>To retrieve all roles within your application, send a <code>GET</code> request to the Roles API resource.</p>

<pre class="highlight shell"><code>curl -X <span class="s2">"GET"</span> <span class="s2">"https://APPID.stamplayapp.com/api/user/v1/roles"</span>
</code></pre>

<pre class="highlight javascript"><code><span class="nx">Stamplay</span><span class="p">.</span><span class="nx">User</span><span class="p">.</span><span class="nx">getRoles</span><span class="p">()</span>
  <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// success</span>
  <span class="p">},</span> <span class="kd">function</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// error</span>
  <span class="p">})</span>
</code></pre>

<pre class="highlight nodejs"><code><span class="c1">// no method</span>
</code></pre>

<h2 id="fetch-individual-role">Fetch Individual Role</h2>

<p>To fetch a single role, send a <code>GET</code> request to the Roles API resource, with the <code>_id</code> as part of the request URI.</p>

<pre class="highlight shell"><code>curl -X <span class="s2">"GET"</span> <span class="s2">"https://APPID.stamplayapp.com/api/user/v1/roles/{role_id}"</span>
</code></pre>

<pre class="highlight javascript"><code><span class="nx">Stamplay</span><span class="p">.</span><span class="nx">User</span><span class="p">.</span><span class="nx">getRole</span><span class="p">(</span><span class="s2">"role_Id"</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// success</span>
  <span class="p">},</span> <span class="kd">function</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// error</span>
  <span class="p">})</span>
</code></pre>

<pre class="highlight nodejs"><code><span class="c1">// no method</span>
</code></pre>

<h2 id="assign-role">Assign Role</h2>

<pre class="highlight shell"><code>curl -X <span class="s2">"PATCH"</span> <span class="s2">"https://APPID.stamplayapp.com/api/user/v1/users/"</span> <span class="se">\</span>
-H <span class="s2">"Content-Type: application/json"</span> <span class="se">\</span>
-d <span class="s2">"{</span><span class="se">\"</span><span class="s2">givenRole</span><span class="se">\"</span><span class="s2">:</span><span class="se">\"</span><span class="s2">role_id</span><span class="se">\"</span><span class="s2">}"</span>

</code></pre>

<pre class="highlight javascript"><code><span class="nx">Stamplay</span><span class="p">.</span><span class="nx">User</span><span class="p">.</span><span class="nx">patch</span><span class="p">(</span><span class="s2">"user_id"</span><span class="p">,</span> <span class="p">{</span> <span class="na">givenRole</span> <span class="p">:</span> <span class="s2">"role_id"</span> <span class="p">})</span>
  <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// success</span>
  <span class="p">},</span> <span class="kd">function</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// error</span>
  <span class="p">})</span>
</code></pre>

<pre class="highlight nodejs"><code><span class="nx">Stamplay</span><span class="p">.</span><span class="nx">User</span><span class="p">.</span><span class="nx">patch</span><span class="p">(</span><span class="s2">"user_id"</span><span class="p">,</span> <span class="p">{</span> <span class="na">givenRole</span> <span class="p">:</span> <span class="s2">"role_id"</span> <span class="p">},</span> <span class="kd">function</span><span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
  <span class="c1">// success</span>
<span class="p">})</span>
</code></pre>

<p>To assign a new role to a user, send a <code>PATCH</code> request with the <code>givenRole</code> property as the unique <code>_id</code> of the role to assign in the request body, to the User API resource with the user's <code>_id</code> as part of the URI.</p>
